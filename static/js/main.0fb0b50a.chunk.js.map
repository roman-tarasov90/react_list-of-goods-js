{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","reverseField","setReverseField","sortField","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAA0BC,EAA1B,GAA+D,IAA5BH,EAA2B,EAA3BA,UAAWF,EAAgB,EAAhBA,aACtCM,EAAa,YAAOD,GAmB1B,OAjBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKN,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXX,GACFM,EAAcM,UAGTN,EAMcO,CAAiBlB,EACpC,CAAEO,YAAWF,iBAEf,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAaP,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYf,IAAcN,IALhC,iCAWA,wBACEmB,QAAS,kBAAMZ,EAAaN,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,WAAYf,IAAcL,IALhC,4BAWA,wBACEkB,QAAS,kBAAMd,GAAiBD,IAChCgB,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CACE,YAAajB,IALnB,sBAWgB,KAAdE,GAAoBF,IACpB,wBACEe,QAAS,WACPZ,EAAa,IACbF,GAAgB,IAElBe,KAAK,SACLF,UAAU,4BANZ,sBAcJ,6BACGV,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCpGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0fb0b50a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [reverseField, setReverseField] = useState(false);\n  const [sortField, setSortField] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortField !== SORT_BY_ALPHABET,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            {\n              'is-light': sortField !== SORT_BY_LENGTH,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button', 'is-warning',\n            {\n              'is-light': !reverseField,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || reverseField) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setReverseField(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}